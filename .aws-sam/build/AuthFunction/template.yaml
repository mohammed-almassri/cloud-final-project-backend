AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Auth service with image upload

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod

Resources:
  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/index.handler
      Runtime: nodejs18.x
      Timeout: 30
      MemorySize: 1024
      Environment:
        Variables:
          NODE_ENV: !Ref Environment
          DYNAMODB_TABLE: !Ref UsersTable
          S3_BUCKET_NAME: !Ref ProfileImagesBucket
          JWT_SECRET: !Sub "{{resolve:ssm:/auth-app/${Environment}/jwt-secret}}"
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UsersTable
        - S3CrudPolicy:
            BucketName: !Ref ProfileImagesBucket
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY

  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub auth-users-${Environment}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: email
          KeyType: HASH

  ProfileImagesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub auth-profile-images-${Environment}-${AWS::AccountId}
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ["*"]
            AllowedMethods: [GET, PUT, POST]
            AllowedOrigins: ["*"]
            MaxAge: 3000

Outputs:
  ApiUrl:
    Description: API Gateway endpoint URL
    Value: !Sub https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/
  BucketName:
    Description: S3 bucket for profile images
    Value: !Ref ProfileImagesBucket
